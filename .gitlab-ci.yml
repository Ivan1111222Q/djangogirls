stages:
  - build
  - push
  - deploy

variables:
  CI_REGISTRY_IMAGE: "5.35.86.16/spirit/django"
  DEPLOY_SERVER: "root@31.129.97.232"
  DEPLOY_PATH: "/home/django"

before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID -f Dockerfile.nginx ./
    - docker build -t $CI_REGISTRY_IMAGE/app:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID -f Dockerfile.app ./
    - docker build -t $CI_REGISTRY_IMAGE/db:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID -f Dockerfile.db ./

push:
  stage: push
  script:
    - docker tag $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID localhost:5000/$CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
    - docker tag $CI_REGISTRY_IMAGE/app:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID localhost:5000/$CI_REGISTRY_IMAGE/app:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
    - docker tag $CI_REGISTRY_IMAGE/db:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID localhost:5000/$CI_REGISTRY_IMAGE/db:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
    - docker push localhost:5000/$CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID 
    - docker push localhost:5000/$CI_REGISTRY_IMAGE/app:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
    - docker push localhost:5000/$CI_REGISTRY_IMAGE/db:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID

deploy:
  stage: deploy
  script:
    - ssh -V
    - ssh -vvv -T $DEPLOY_SERVER || true
    - scp  docker-compose.production.yml root@31.129.97.232:/home/django
    - ssh $DEPLOY_SERVER "cd $DEPLOY_PATH && docker-compose down"
    - ssh $DEPLOY_SERVER "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && docker-compose -f docker-compose.production.yml pull && docker-compose -f docker-compose.production.yml up -d"
